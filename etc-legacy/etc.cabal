-- This file has been generated from package.yaml by hpack version 0.17.0.
--
-- see: https://github.com/sol/hpack

name:           etc
version:        0.4.1.0
synopsis:       Declarative configuration spec for Haskell projects
description:    `etc` gathers configuration values from multiple sources (cli options, OS
                environment variables, files) using a declarative spec file that defines where
                these values are to be found and located in a configuration map.
category:       Configuration, System
homepage:       https://github.com/roman/Haskell-etc
author:         Roman Gonzalez
maintainer:     open-source@roman-gonzalez.info
copyright:      2017, 2018 Roman Gonzalez
tested-with:    GHC == 8.0.1, GHC == 8.0.2, GHC == 8.2.2, GHC == 8.4.2
license:        MIT
license-file:   LICENSE
build-type:     Simple
cabal-version:  >= 1.10
data-files:
    test/fixtures/config.foo
    test/fixtures/config.json
    test/fixtures/config.env.json
    test/fixtures/config.null.json
    test/fixtures/config.spec.yaml
    test/fixtures/config.spec.invalid.yaml
    test/fixtures/config.yaml
    test/fixtures/config.yml
extra-source-files:
  README.md
  CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/roman/Haskell-etc

flag extra
  description: Include extra utilities
  manual: False
  default: False

flag cli
  description: Include support for cli arguments
  manual: False
  default: False

flag yaml
  description: Include support to parse YAML files
  manual: False
  default: False

library
  hs-source-dirs: src
  ghc-options: -Wall
  build-depends:
      base              >=4.7 && <5
    , aeson             >=0.11
    , rio               >=0.0.1.0
    , text              >=0.0.1.0
    -- NOTE: bellow are rio dependencies that help the stack resolver, not
    -- really required by etc
    , typed-process     >=0.1.1
    , unliftio          >=0.1.1.0
    , template-haskell  >=2.11.0.0

  exposed-modules:
      System.Etc
      System.Etc.Spec
      System.Etc.Internal.Config
      System.Etc.Internal.Errors
      System.Etc.Internal.Spec.JSON
      System.Etc.Internal.Spec.JSON.TH
      System.Etc.Internal.Spec.Types
      System.Etc.Internal.Spec.Parser
      System.Etc.Internal.Types
      System.Etc.Internal.Resolver.Default
      System.Etc.Internal.Resolver.File
      System.Etc.Internal.Resolver.Env

  other-modules:
      Paths_etc

  default-language: Haskell2010

  if flag(extra)
    cpp-options: -DWITH_EXTRA
    build-depends:
        ansi-wl-pprint >=0.6
      , edit-distance  >=0.2

    exposed-modules:
      System.Etc.Internal.Extra.Printer
      System.Etc.Internal.Extra.EnvMisspell

  if flag(cli)
    cpp-options: -DWITH_CLI
    build-depends:
      optparse-applicative >=0.12
    exposed-modules:
      System.Etc.Internal.Resolver.Cli
      System.Etc.Internal.Resolver.Cli.Common
      System.Etc.Internal.Resolver.Cli.Plain
      System.Etc.Internal.Resolver.Cli.Command

  if flag(yaml)
    cpp-options: -DWITH_YAML
    build-depends:
      yaml >=0.8
    exposed-modules:
      System.Etc.Internal.Spec.YAML
      System.Etc.Internal.Spec.YAML.TH

test-suite etc-testsuite
  type: exitcode-stdio-1.0
  main-is: TestSuite.hs
  hs-source-dirs:
      test
  ghc-options: -Wall
  build-depends:
      base        >=4.7
    , aeson       >=0.11
    , rio         >=0.0.1.0
    , tasty       >=0.11
    , tasty-hunit >=0.9
    , etc

  if flag(cli)
    cpp-options: -DWITH_CLI
    build-depends:
      optparse-applicative >=0.12
    other-modules:
      System.Etc.Resolver.CliTest
      System.Etc.Resolver.Cli.PlainTest
      System.Etc.Resolver.Cli.CommandTest
  if flag(yaml)
    cpp-options: -DWITH_YAML
    build-depends:
      yaml >=0.8
  if flag(extra)
    cpp-options: -DWITH_EXTRA
    build-depends:
      edit-distance >=0.2
    other-modules:
      System.Etc.Extra.EnvMisspellTest
  other-modules:
      Paths_etc
      System.Etc.Resolver.DefaultTest
      System.Etc.Resolver.EnvTest
      System.Etc.Resolver.FileTest
      System.Etc.SpecTest
      System.Etc.ConfigTest
  default-language: Haskell2010
